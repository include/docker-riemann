; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "{{ if .Env.HOST }}{{ .Env.HOST }}{{ else }}0.0.0.0{{ end }}"]
  (udp-server {:host host :port {{ if .Env.UDP_PORT }}{{ .Env.UDP_PORT }}{{ else }}5555{{ end }}})
  (tcp-server {:host host :port {{ if .Env.TCP_PORT }}{{ .Env.TCP_PORT }}{{ else }}5555{{ end }}})
  (ws-server  {:host host :port {{ if .Env.WSE_PORT }}{{ .Env.WSE_PORT }}{{ else }}5556{{ end }}}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

{{ if .Env.CONFDIR }}
; Shipping your custom Riemann configurations within docker:
(include "{{ .Env.CONFDIR }}")
{{end}}

{{ if .Env.VOLDIR }}
; Mounting a volume with your custom Riemann configurations:
(include "{{ .Env.VOLDIR }}")
{{end}}
